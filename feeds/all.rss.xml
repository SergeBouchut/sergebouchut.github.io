<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Mon labo</title><link>https://sergebouchut.github.io/</link><description></description><lastBuildDate>Sat, 16 Jun 2018 20:00:00 +0200</lastBuildDate><item><title>Yield : cédez le passage</title><link>https://sergebouchut.github.io/yield-cedez-le-passage.html</link><description>&lt;p&gt;&lt;img alt="Johnny Depp / Benicio del Toro" src="https://sergebouchut.github.io/images/las_vegas_parano.jpg" title="We can’t stop here. This is bat country."&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yield&lt;/code&gt; est une instruction bien connue des développeurs Python expérimentés, mais peu utilisée par les plus débutants. Pourtant, le concept est assez simple à appréhender et peut s'avérer pratique dans de nombreux cas.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yield&lt;/code&gt; peut se traduire par retourner / rendre / céder. En Python, il permet à une fonction de rendre …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Serge Bouchut</dc:creator><pubDate>Sat, 16 Jun 2018 20:00:00 +0200</pubDate><guid isPermaLink="false">tag:sergebouchut.github.io,2018-06-16:/yield-cedez-le-passage.html</guid><category>python</category><category>fp</category></item><item><title>Retrouver son historique Git</title><link>https://sergebouchut.github.io/retrouver-son-historique-git.html</link><description>&lt;p&gt;&lt;img alt="Sherlock Holmes" src="https://sergebouchut.github.io/images/sherlock.jpg" title="Because you're an idiot. No, no, no. Don't look like that. Practically everyone is."&gt;&lt;/p&gt;
&lt;p&gt;En discutant avec un collègue, je me suis rendu compte que j’avais une compréhension erronée, de la "véritable nature" des branches et des tags dans Git.&lt;/p&gt;
&lt;p&gt;En effet, je me les représentais comme des "ensembles de commits". C’est peut-être la manière usuelle de les décrire qui m'a induit …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Serge Bouchut</dc:creator><pubDate>Fri, 15 Jun 2018 20:00:00 +0200</pubDate><guid isPermaLink="false">tag:sergebouchut.github.io,2018-06-15:/retrouver-son-historique-git.html</guid><category>git</category></item><item><title>Le polymorphisme en Python</title><link>https://sergebouchut.github.io/le-polymorphisme-en-python.html</link><description>&lt;p&gt;&lt;img alt="Harvey Dent" src="https://sergebouchut.github.io/images/batman.jpg" title="The only morality in a cruel world is chance: unbiased, unprejudiced, fair."&gt;&lt;/p&gt;
&lt;p&gt;Le polymorphisme dit "paramétrique" est un des concepts clés de la programmation orientée objet. Il permet de définir plusieurs fonctions de même nom, mais avec des signatures différentes (variant sur le nombre et le type d'argument). C'est aussi un bon moyen de segmenter le code par logique "métier".&lt;/p&gt;
&lt;p&gt;Python répond …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Serge Bouchut</dc:creator><pubDate>Thu, 14 Jun 2018 20:00:00 +0200</pubDate><guid isPermaLink="false">tag:sergebouchut.github.io,2018-06-14:/le-polymorphisme-en-python.html</guid><category>python</category><category>poo</category></item></channel></rss>